{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/giaconi/code/giaconi/blog-aerdevacanta/pages/blog/[slug].js\";\n// file: pages/blog/[slug].js\nimport React from \"react\";\n\nfunction BlogPostPage(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      dangerouslySetInnerHTML: {\n        __html: props.blog.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // pass props to BlogPostPage component\n\n\n_c = BlogPostPage;\nexport var __N_SSG = true;\nexport default BlogPostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostPage\");","map":{"version":3,"sources":["/Users/giaconi/code/giaconi/blog-aerdevacanta/pages/blog/[slug].js"],"names":["React","BlogPostPage","props","blog","title","__html","content"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE;AAAA,4BACQ;AAAA,gBAAKA,KAAK,CAACC,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADR,eAEE;AAAS,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEH,KAAK,CAACC,IAAN,CAAWG;AAArB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;;;KATSL,Y;;AAmET,eAAeA,YAAf","sourcesContent":["// file: pages/blog/[slug].js\nimport React from \"react\";\n\nfunction BlogPostPage(props) {\n  return (\n    <div>\n            <h1>{props.blog.title}</h1>\n      <section dangerouslySetInnerHTML={{ __html: props.blog.content }}></section>\n    </div>\n  );\n}\n\n// pass props to BlogPostPage component\nexport async function getStaticProps(context) {\n  const fs = require(\"fs\");\n  const html = require(\"remark-html\");\n  const highlight = require(\"remark-highlight.js\");\n  const unified = require(\"unified\");\n  const markdown = require(\"remark-parse\");\n  const matter = require(\"gray-matter\");\n\n  const slug = context.params.slug; // get slug from params\n  const path = `${process.cwd()}/contents/${slug}.md`;\n\n    // read file content and store into rawContent variable\n    const rawContent = fs.readFileSync(path, {\n    encoding: \"utf-8\",\n  });\n\n  const { data, content } = matter(rawContent); // pass rawContent to gray-matter to get data and content\n\n  const result = await unified()\n    .use(markdown)\n    .use(highlight) // highlight code block\n    .use(html)\n    .process(content); // pass content to process\n\n  return {\n    props: {\n            blog: {\n                ...data,\n          content: result.toString(),\n            }\n    },\n  };\n}\n\n// generate HTML paths at build time\nexport async function getStaticPaths(context) {\n  const fs = require(\"fs\");\n\n    const path = `${process.cwd()}/contents`;\n  const files = fs.readdirSync(path, \"utf-8\");\n\n    const markdownFileNames = files\n    .filter((fn) => fn.endsWith(\".md\"))\n    .map((fn) => fn.replace(\".md\", \"\"));\n\n  return {\n    paths: markdownFileNames.map((fileName) => {\n      return {\n        params: {\n          slug: fileName,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n\nexport default BlogPostPage;"]},"metadata":{},"sourceType":"module"}