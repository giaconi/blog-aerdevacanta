{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/giaconi/code/giaconi/blog-aerdevacanta/pages/index.js\";\nimport React from \"react\";\nimport Link from \"next/link\";\n\nfunction IndexPage(props) {\n  var _this = this;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.blogs.map(function (blog, idx) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/blog/\".concat(blog.slug),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: blog.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, _this)\n          }, blog.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // This function gets called at build time on server-side.\n\n\n_c = IndexPage;\nexport var __N_SSG = true;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/giaconi/code/giaconi/blog-aerdevacanta/pages/index.js"],"names":["React","Link","IndexPage","props","blogs","map","blog","idx","slug","title","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC9B,4BACE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,kBAAWD,IAAI,CAACE,IAAhB,CAAV;AAAA,qCACE;AAAA,0BAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAASH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,C,CAED;;;KAtBSR,S;;AAiDT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n\nfunction IndexPage(props) {\n  return (\n    <div>\n      <h1>Blog list</h1>\n      <ul>\n        {props.blogs.map((blog, idx) => {\n          return (\n            <div>\n              <Link href={`/`}>Back</Link>\n              <li key={blog.id}>\n                <Link href={`/blog/${blog.slug}`}>\n                  <a>{blog.title}</a>\n                </Link>\n              </li>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\n// This function gets called at build time on server-side.\nexport async function getStaticProps() {\n  const fs = require(\"fs\");\n  const matter = require(\"gray-matter\");\n  const { v4: uuid } = require(\"uuid\");\n\n  const files = fs.readdirSync(`${process.cwd()}/contents`, \"utf-8\");\n\n  const blogs = files\n    .filter((fn) => fn.endsWith(\".md\"))\n    .map((fn) => {\n      const path = `${process.cwd()}/contents/${fn}`;\n      const rawContent = fs.readFileSync(path, {\n        encoding: \"utf-8\",\n      });\n      const { data } = matter(rawContent);\n\n      return { ...data, id: uuid() };\n    });\n\n    // By returning { props: blogs }, the IndexPage component\n  // will receive `blogs` as a prop at build time\n  return {\n    props: { blogs },\n  };\n}\n\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}